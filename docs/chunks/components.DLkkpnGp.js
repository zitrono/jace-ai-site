import{c as createAstro,a as createComponent,r as renderTemplate,b as renderComponent,d as addAttribute,s as spreadAttributes,m as maybeRenderHead,e as renderSlot}from"./vendor-astro.40XTpPt8.js";import{$ as $$Button}from"./primitives.DCCSasVW.js";import"html-escaper";import"clsx";import"kleur/colors";var _a,__freeze=Object.freeze,__defProp=Object.defineProperty,__template=(e,n)=>__freeze(__defProp(e,"raw",{value:__freeze(n||e.slice())}));const $$Astro$2=createAstro("https://zitrono.github.io"),$$Header=createComponent(((e,n,t)=>{const o=e.createAstro($$Astro$2,n,t);o.self=$$Header;const{class:i="",sticky:a=!0,transparent:r=!1,showLogo:l=!0,logoText:s="ralph",logoHref:u="/ralph-web/",navLinks:d=[{href:"/ralph-web/#product",text:"Product"},{href:"/ralph-web/#pricing",text:"Pricing"},{href:"/ralph-web/learn",text:"Learn"}],showCta:c=!0,ctaText:m="Book a Demo",loginText:f="Log In",...p}=o.props,b=[a?"sticky top-0":"relative","z-20 inset-x-0",r?"bg-transparent":"bg-neutral-700/95 backdrop-blur-sm","transition-all duration-300",!r&&"border-b border-neutral-600/50",i].filter(Boolean).join(" ");return renderTemplate(_a||(_a=__template(["","<header","",'>  <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:left-6 focus:top-6 focus:z-50 focus:rounded-base focus:bg-primary-yellow focus:px-component-base focus:py-component-sm focus:text-text-inverted focus:no-underline focus:outline-none focus:ring-2 focus:ring-primary-yellow focus:ring-offset-2 focus:ring-offset-neutral-700">\nSkip to main content\n</a> <nav id="navigation" class="mx-auto flex max-w-7xl items-center justify-between" role="navigation" aria-label="Main navigation"> <div class="flex items-center justify-between w-full px-6 py-3 lg:px-8 lg:py-4 transition-all duration-300" style="height: 64px;">  ',"  ",'  <div class="flex lg:hidden"> <button id="mobile-menu-button" type="button" class="inline-flex items-center justify-center rounded-base p-3 text-text-primary min-h-[44px] min-w-[44px] touch-manipulation focus:outline-none focus:ring-2 focus:ring-primary-yellow focus:ring-offset-2 focus:ring-offset-neutral-700" aria-label="Open main menu" aria-expanded="false" aria-controls="mobile-menu" aria-haspopup="true"> <svg class="size-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"> <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path> </svg> </button> </div>  <nav class="hidden lg:flex lg:gap-x-12" role="navigation" aria-label="Main navigation"> '," </nav>  ",' </div> </nav>  <div id="mobile-menu" class="hidden fixed inset-0 z-50 lg:hidden" role="dialog" aria-modal="true" aria-labelledby="mobile-menu-title" data-mobile-menu-overlay>  <div class="fixed inset-0 bg-black/50" aria-hidden="true"></div>  <div class="fixed right-0 top-0 bottom-0 w-full bg-neutral-700 p-6 shadow-xl transform translate-x-full transition-transform duration-300 ease-in-out" data-mobile-menu-panel> <div class="flex items-center justify-between mb-8"> ',' <button id="mobile-menu-close" type="button" class="inline-flex items-center justify-center rounded-base p-3 text-text-primary min-h-[44px] min-w-[44px] touch-manipulation focus:outline-none focus:ring-2 focus:ring-primary-yellow focus:ring-offset-2 focus:ring-offset-neutral-700" aria-label="Close menu"> <svg class="size-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"> <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path> </svg> </button> </div> <nav class="flex flex-col space-y-4" role="navigation" aria-label="Mobile navigation"> <h2 id="mobile-menu-title" class="sr-only">Mobile Navigation Menu</h2> '," "," </nav> </div> </div> \x3c!-- Performance-optimized mobile menu script with client:media for mobile-only loading --\x3e <script client:media=\"(max-width: 1024px)\">\n  // Mobile menu functionality optimized for performance\n  function initializeMobileMenu() {\n    const mobileMenuButton = document.getElementById('mobile-menu-button');\n    const mobileMenuClose = document.getElementById('mobile-menu-close');\n    const mobileMenu = document.getElementById('mobile-menu');\n    const mobileMenuPanel = document.querySelector('[data-mobile-menu-panel]');\n\n    if (!mobileMenuButton || !mobileMenu || !mobileMenuPanel) return;\n\n    // Performance-optimized show/hide with hardware acceleration\n    const showMenu = () => {\n      // Use will-change for better performance\n      mobileMenuPanel.style.willChange = 'transform';\n      mobileMenu.classList.remove('hidden');\n      \n      requestAnimationFrame(() => {\n        mobileMenuPanel.style.transform = 'translateX(0)';\n        mobileMenuButton.setAttribute('aria-expanded', 'true');\n        \n        // Focus management\n        const firstFocusable = mobileMenu.querySelector('a, button');\n        if (firstFocusable) firstFocusable.focus();\n        \n        // Prevent body scroll\n        document.body.style.overflow = 'hidden';\n      });\n    };\n\n    const hideMenu = () => {\n      mobileMenuPanel.style.transform = 'translateX(100%)';\n      mobileMenuButton.setAttribute('aria-expanded', 'false');\n      \n      // Restore body scroll\n      document.body.style.overflow = '';\n      \n      setTimeout(() => {\n        mobileMenu.classList.add('hidden');\n        mobileMenuPanel.style.willChange = 'auto';\n        \n        // Return focus to menu button\n        if (mobileMenuButton) mobileMenuButton.focus();\n      }, 300);\n    };\n\n    // Event listeners with performance optimizations\n    mobileMenuButton.addEventListener('click', showMenu, { passive: true });\n    \n    if (mobileMenuClose) {\n      mobileMenuClose.addEventListener('click', hideMenu, { passive: true });\n    }\n\n    // Optimized backdrop click handling\n    mobileMenu.addEventListener('click', (e) => {\n      if (e.target === mobileMenu || e.target.hasAttribute('data-mobile-menu-overlay')) {\n        hideMenu();\n      }\n    }, { passive: true });\n\n    // Keyboard handling\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && !mobileMenu.classList.contains('hidden')) {\n        hideMenu();\n      }\n    });\n\n    // Touch handling for mobile swipe-to-close\n    let startX = 0;\n    let currentX = 0;\n    let isDragging = false;\n\n    const handleTouchStart = (e) => {\n      startX = e.touches[0].clientX;\n      isDragging = true;\n      mobileMenuPanel.style.transition = 'none';\n    };\n\n    const handleTouchMove = (e) => {\n      if (!isDragging) return;\n      currentX = e.touches[0].clientX;\n      const deltaX = currentX - startX;\n      \n      if (deltaX > 0) {\n        const translateX = Math.min(deltaX, window.innerWidth);\n        mobileMenuPanel.style.transform = `translateX(${translateX}px)`;\n      }\n    };\n\n    const handleTouchEnd = () => {\n      if (!isDragging) return;\n      isDragging = false;\n      \n      const deltaX = currentX - startX;\n      mobileMenuPanel.style.transition = '';\n      \n      if (deltaX > window.innerWidth * 0.3) {\n        hideMenu();\n      } else {\n        mobileMenuPanel.style.transform = 'translateX(0)';\n      }\n    };\n\n    if ('ontouchstart' in window) {\n      mobileMenuPanel.addEventListener('touchstart', handleTouchStart, { passive: true });\n      mobileMenuPanel.addEventListener('touchmove', handleTouchMove, { passive: true });\n      mobileMenuPanel.addEventListener('touchend', handleTouchEnd, { passive: true });\n    }\n\n    // Cleanup on page unload\n    window.addEventListener('beforeunload', () => {\n      document.body.style.overflow = '';\n    });\n  }\n\n  // Initialize when DOM is ready\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initializeMobileMenu);\n  } else {\n    initializeMobileMenu();\n  }\n<\/script> </header>"],["","<header","",'>  <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:left-6 focus:top-6 focus:z-50 focus:rounded-base focus:bg-primary-yellow focus:px-component-base focus:py-component-sm focus:text-text-inverted focus:no-underline focus:outline-none focus:ring-2 focus:ring-primary-yellow focus:ring-offset-2 focus:ring-offset-neutral-700">\nSkip to main content\n</a> <nav id="navigation" class="mx-auto flex max-w-7xl items-center justify-between" role="navigation" aria-label="Main navigation"> <div class="flex items-center justify-between w-full px-6 py-3 lg:px-8 lg:py-4 transition-all duration-300" style="height: 64px;">  ',"  ",'  <div class="flex lg:hidden"> <button id="mobile-menu-button" type="button" class="inline-flex items-center justify-center rounded-base p-3 text-text-primary min-h-[44px] min-w-[44px] touch-manipulation focus:outline-none focus:ring-2 focus:ring-primary-yellow focus:ring-offset-2 focus:ring-offset-neutral-700" aria-label="Open main menu" aria-expanded="false" aria-controls="mobile-menu" aria-haspopup="true"> <svg class="size-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"> <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path> </svg> </button> </div>  <nav class="hidden lg:flex lg:gap-x-12" role="navigation" aria-label="Main navigation"> '," </nav>  ",' </div> </nav>  <div id="mobile-menu" class="hidden fixed inset-0 z-50 lg:hidden" role="dialog" aria-modal="true" aria-labelledby="mobile-menu-title" data-mobile-menu-overlay>  <div class="fixed inset-0 bg-black/50" aria-hidden="true"></div>  <div class="fixed right-0 top-0 bottom-0 w-full bg-neutral-700 p-6 shadow-xl transform translate-x-full transition-transform duration-300 ease-in-out" data-mobile-menu-panel> <div class="flex items-center justify-between mb-8"> ',' <button id="mobile-menu-close" type="button" class="inline-flex items-center justify-center rounded-base p-3 text-text-primary min-h-[44px] min-w-[44px] touch-manipulation focus:outline-none focus:ring-2 focus:ring-primary-yellow focus:ring-offset-2 focus:ring-offset-neutral-700" aria-label="Close menu"> <svg class="size-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"> <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path> </svg> </button> </div> <nav class="flex flex-col space-y-4" role="navigation" aria-label="Mobile navigation"> <h2 id="mobile-menu-title" class="sr-only">Mobile Navigation Menu</h2> '," "," </nav> </div> </div> \x3c!-- Performance-optimized mobile menu script with client:media for mobile-only loading --\x3e <script client:media=\"(max-width: 1024px)\">\n  // Mobile menu functionality optimized for performance\n  function initializeMobileMenu() {\n    const mobileMenuButton = document.getElementById('mobile-menu-button');\n    const mobileMenuClose = document.getElementById('mobile-menu-close');\n    const mobileMenu = document.getElementById('mobile-menu');\n    const mobileMenuPanel = document.querySelector('[data-mobile-menu-panel]');\n\n    if (!mobileMenuButton || !mobileMenu || !mobileMenuPanel) return;\n\n    // Performance-optimized show/hide with hardware acceleration\n    const showMenu = () => {\n      // Use will-change for better performance\n      mobileMenuPanel.style.willChange = 'transform';\n      mobileMenu.classList.remove('hidden');\n      \n      requestAnimationFrame(() => {\n        mobileMenuPanel.style.transform = 'translateX(0)';\n        mobileMenuButton.setAttribute('aria-expanded', 'true');\n        \n        // Focus management\n        const firstFocusable = mobileMenu.querySelector('a, button');\n        if (firstFocusable) firstFocusable.focus();\n        \n        // Prevent body scroll\n        document.body.style.overflow = 'hidden';\n      });\n    };\n\n    const hideMenu = () => {\n      mobileMenuPanel.style.transform = 'translateX(100%)';\n      mobileMenuButton.setAttribute('aria-expanded', 'false');\n      \n      // Restore body scroll\n      document.body.style.overflow = '';\n      \n      setTimeout(() => {\n        mobileMenu.classList.add('hidden');\n        mobileMenuPanel.style.willChange = 'auto';\n        \n        // Return focus to menu button\n        if (mobileMenuButton) mobileMenuButton.focus();\n      }, 300);\n    };\n\n    // Event listeners with performance optimizations\n    mobileMenuButton.addEventListener('click', showMenu, { passive: true });\n    \n    if (mobileMenuClose) {\n      mobileMenuClose.addEventListener('click', hideMenu, { passive: true });\n    }\n\n    // Optimized backdrop click handling\n    mobileMenu.addEventListener('click', (e) => {\n      if (e.target === mobileMenu || e.target.hasAttribute('data-mobile-menu-overlay')) {\n        hideMenu();\n      }\n    }, { passive: true });\n\n    // Keyboard handling\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && !mobileMenu.classList.contains('hidden')) {\n        hideMenu();\n      }\n    });\n\n    // Touch handling for mobile swipe-to-close\n    let startX = 0;\n    let currentX = 0;\n    let isDragging = false;\n\n    const handleTouchStart = (e) => {\n      startX = e.touches[0].clientX;\n      isDragging = true;\n      mobileMenuPanel.style.transition = 'none';\n    };\n\n    const handleTouchMove = (e) => {\n      if (!isDragging) return;\n      currentX = e.touches[0].clientX;\n      const deltaX = currentX - startX;\n      \n      if (deltaX > 0) {\n        const translateX = Math.min(deltaX, window.innerWidth);\n        mobileMenuPanel.style.transform = \\`translateX(\\${translateX}px)\\`;\n      }\n    };\n\n    const handleTouchEnd = () => {\n      if (!isDragging) return;\n      isDragging = false;\n      \n      const deltaX = currentX - startX;\n      mobileMenuPanel.style.transition = '';\n      \n      if (deltaX > window.innerWidth * 0.3) {\n        hideMenu();\n      } else {\n        mobileMenuPanel.style.transform = 'translateX(0)';\n      }\n    };\n\n    if ('ontouchstart' in window) {\n      mobileMenuPanel.addEventListener('touchstart', handleTouchStart, { passive: true });\n      mobileMenuPanel.addEventListener('touchmove', handleTouchMove, { passive: true });\n      mobileMenuPanel.addEventListener('touchend', handleTouchEnd, { passive: true });\n    }\n\n    // Cleanup on page unload\n    window.addEventListener('beforeunload', () => {\n      document.body.style.overflow = '';\n    });\n  }\n\n  // Initialize when DOM is ready\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initializeMobileMenu);\n  } else {\n    initializeMobileMenu();\n  }\n<\/script> </header>"])),maybeRenderHead(),addAttribute(b,"class"),spreadAttributes(p),l&&renderTemplate`<div class="flex lg:flex-1"> <a${addAttribute(u,"href")} class="inline-flex items-center -m-1.5 p-1.5 rounded-base focus:outline-none focus:ring-2 focus:ring-primary-yellow focus:ring-offset-2 focus:ring-offset-neutral-700"> <span class="sr-only">${s}</span> <span class="text-text-primary font-bold text-2xl">${s}</span> </a> </div>`,c&&renderTemplate`<div class="flex lg:hidden flex-1 justify-end mr-3"> ${renderComponent(e,"Button",$$Button,{variant:"primary",size:"sm",class:"text-xs sm:text-sm min-h-[44px] min-w-[44px] touch-manipulation"},{default:e=>renderTemplate` <span class="hidden min-[360px]:inline">${m}</span> <span class="inline min-[360px]:hidden">Book Demo</span> `})} </div>`,d.map((e=>renderTemplate`<a${addAttribute(e.href,"href")} class="nav-link text-text-primary hover:text-primary-yellow transition-colors duration-200 font-medium focus:outline-none focus:underline focus:underline-offset-4"${spreadAttributes(e.external&&{target:"_blank",rel:"noopener noreferrer"})}> ${e.text} </a>`)),c&&renderTemplate`<div class="hidden lg:flex lg:flex-1 lg:justify-end lg:gap-x-6"> ${renderComponent(e,"Button",$$Button,{variant:"secondary",id:"login-button","data-test":"secondary-button",class:"focus:ring-2 focus:ring-neutral-400 focus:ring-offset-2 focus:ring-offset-neutral-700"},{default:e=>renderTemplate`${f}`})} ${renderComponent(e,"Button",$$Button,{variant:"primary",size:"lg","data-test":"cta-button",class:"focus:ring-2 focus:ring-primary-yellow focus:ring-offset-2 focus:ring-offset-neutral-700"},{default:e=>renderTemplate`${m}`})} </div>`,l&&renderTemplate`<a${addAttribute(u,"href")} class="inline-flex items-center -m-1.5 p-1.5 rounded-base focus:outline-none focus:ring-2 focus:ring-primary-yellow focus:ring-offset-2 focus:ring-offset-neutral-700"> <span class="sr-only">${s}</span> <span class="text-text-primary font-bold text-2xl">${s}</span> </a>`,d.map((e=>renderTemplate`<a${addAttribute(e.href,"href")} class="nav-link text-lg text-text-primary hover:text-primary-yellow transition-colors duration-200 font-medium py-3 px-2 rounded-base min-h-[44px] flex items-center focus:outline-none focus:ring-2 focus:ring-primary-yellow focus:ring-offset-2 focus:ring-offset-neutral-700"${spreadAttributes(e.external&&{target:"_blank",rel:"noopener noreferrer"})}> ${e.text} </a>`)),c&&renderTemplate`<div class="pt-6 border-t border-neutral-600 flex flex-row gap-4"> ${renderComponent(e,"Button",$$Button,{variant:"secondary",id:"mobile-login-button",class:"flex-1 text-center min-h-[44px] focus:ring-2 focus:ring-neutral-400 focus:ring-offset-2 focus:ring-offset-neutral-700"},{default:e=>renderTemplate`${f}`})} ${renderComponent(e,"Button",$$Button,{variant:"primary",size:"lg",class:"flex-1 min-h-[44px] focus:ring-2 focus:ring-primary-yellow focus:ring-offset-2 focus:ring-offset-neutral-700"},{default:e=>renderTemplate`${m}`})} </div>`)}),"/Users/zitrono/dev/web/ralph-web/src/components/layout/Header.astro",void 0),$$Astro$1=createAstro("https://zitrono.github.io"),$$Footer=createComponent(((e,n,t)=>{const o=e.createAstro($$Astro$1,n,t);o.self=$$Footer;const{class:i="",companyName:a="Beneficious",year:r=(new Date).getFullYear(),contactEmail:l="Konstantin@beneficious.com",showLinks:s=!0,customLinks:u,showCopyright:d=!0,customCopyright:c,background:m="primary",showBorder:f=!0,...p}=o.props,b=u||[{href:"/ralph-web/privacy",text:"Privacy Policy"},{href:"/ralph-web/terms",text:"Terms of Service"},{href:`mailto:${l}`,text:"Contact"}],g=[{primary:"bg-neutral-700",secondary:"bg-neutral-600",card:"bg-surface-card"}[m],f&&"border-t border-neutral-600",i].filter(Boolean).join(" "),h=c||`© ${r} ${a}. All rights reserved.`;return renderTemplate`${maybeRenderHead()}<footer id="footer"${addAttribute(g,"class")} role="contentinfo"${spreadAttributes(p)}> <div class="mx-auto max-w-7xl px-6 py-8 lg:px-8"> <div class="flex flex-col items-center space-y-6"> ${s&&renderTemplate`<nav role="navigation" aria-label="Footer navigation"> <div class="flex flex-wrap justify-center gap-x-8 gap-y-4 text-sm"> ${b.map(((e,n)=>renderTemplate`<a${addAttribute(e.href,"href")} class="text-text-muted hover:text-text-primary transition-colors duration-200 font-medium focus:outline-none focus:ring-2 focus:ring-primary-yellow focus:ring-offset-2 focus:ring-offset-neutral-700 focus:rounded-base min-h-[44px] flex items-center px-2 py-1"${spreadAttributes(e.external&&{target:"_blank",rel:"noopener noreferrer","aria-label":`${e.text} (opens in new tab)`})}> ${e.text} </a>`))} </div> </nav>`} ${d&&renderTemplate`<p class="text-center text-sm text-text-muted" role="contentinfo"> ${h} </p>`} </div> </div> </footer>`}),"/Users/zitrono/dev/web/ralph-web/src/components/layout/Footer.astro",void 0),$$Astro=createAstro("https://zitrono.github.io"),$$Section=createComponent(((e,n,t)=>{const o=e.createAstro($$Astro,n,t);o.self=$$Section;const{class:i="",background:a="primary",spacing:r="lg",maxWidth:l="2xl",id:s,as:u="section",padded:d=!0,ariaLabel:c,ariaLabelledBy:m,...f}=o.props,p=[{primary:"bg-neutral-700",secondary:"bg-neutral-600",card:"bg-surface-card",gradient:"bg-gradient-cta-section",transparent:"bg-transparent"}[a],{xs:"py-section-sm",sm:"py-12",md:"py-16",lg:"py-section-base",xl:"py-24","2xl":"py-section-lg"}[r],i].filter(Boolean).join(" "),b=["mx-auto",{sm:"max-w-3xl",md:"max-w-5xl",lg:"max-w-6xl",xl:"max-w-7xl","2xl":"max-w-7xl",full:"max-w-none"}[l],d&&"px-6 lg:px-8"].filter(Boolean).join(" "),g={class:p,id:s,...c&&{"aria-label":c},...m&&{"aria-labelledby":m},...f};return renderTemplate`${renderComponent(e,"Element",u,{...g},{default:e=>renderTemplate` ${maybeRenderHead()}<div${addAttribute(b,"class")}> ${renderSlot(e,t.default)} </div> `})}`}),"/Users/zitrono/dev/web/ralph-web/src/components/layout/Section.astro",void 0);export{$$Section as $,$$Header as a,$$Footer as b};