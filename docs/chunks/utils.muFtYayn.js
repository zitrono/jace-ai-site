import{c as createAstro,a as createComponent,r as renderTemplate,d as addAttribute,m as maybeRenderHead,b as renderComponent}from"./vendor-astro.40XTpPt8.js";import"kleur/colors";import"html-escaper";import"clsx";import{$ as $$Button}from"./primitives.DCCSasVW.js";var _a$1,__freeze$1=Object.freeze,__defProp$1=Object.defineProperty,__template$1=(e,n)=>__freeze$1(__defProp$1(e,"raw",{value:__freeze$1(e.slice())}));const $$Astro$1=createAstro("https://zitrono.github.io"),$$CookieConsent=createComponent(((e,n,t)=>{const o=e.createAstro($$Astro$1,n,t);o.self=$$CookieConsent;const{class:i="",title:a="Cookie Preferences",message:r="We use cookies to enhance your experience. Choose your preferences below. Read about our privacy policy",privacyLink:s="/privacy",position:l="bottom-left",id:c="cookie-banner"}=o.props;return renderTemplate(_a$1||(_a$1=__template$1(["\x3c!-- Cookie Banner - initially hidden, positioned bottom-left --\x3e\x3c!-- Progressive Enhancement: Non-critical functionality loaded with client:idle --\x3e","<div","",' data-testid="cookie-consent-banner"> <div','> <div class="flex flex-col gap-3"> <div> <h2 class="mb-1 text-sm font-medium">','</h2> <p class="text-xs text-secondary"> '," <a"," target=\"_blank\" rel=\"noopener noreferrer\" class=\"text-white hover:text-gray-300 underline\">here</a>.\n</p> </div> <div class=\"flex gap-2 justify-between\"> <button id=\"cookie-settings\" class=\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 active:scale-[.99] underline-offset-4 hover:underline border-0 h-7 px-3 text-sm cursor-pointer text-white hover:text-gray-300\" aria-label=\"Open cookie settings\">\nSettings\n</button> <div class=\"flex gap-2\"> <button id=\"cookie-reject\" class=\"inline-flex items-center justify-center gap-2 border border-white/20 whitespace-nowrap rounded-md font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 active:scale-[.99] shadow-sm h-7 px-3 text-sm cursor-pointer text-white hover:bg-white/10\" aria-label=\"Reject all cookies\">\nReject\n</button> <button id=\"cookie-accept\" class=\"inline-flex items-center justify-center gap-2 border border-transparent whitespace-nowrap rounded-md font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 active:scale-[.99] shadow-sm h-7 px-3 text-sm cursor-pointer bg-accent text-accent-foreground hover:bg-accent/90\" aria-label=\"Accept all cookies\">\nAccept\n</button> </div> </div> </div> </div> </div> \x3c!-- Performance-optimized cookie consent with client:idle for non-critical loading --\x3e <script client:idle>\n  // Optimized cookie consent functionality with performance considerations\n  function initializeCookieConsent() {\n    // Check if consent was already given to avoid unnecessary operations\n    const consentGiven = localStorage.getItem('cookieConsent');\n    const banner = document.getElementById('cookie-banner');\n    \n    if (consentGiven || !banner) return;\n\n    // Performance-optimized banner display with IntersectionObserver\n    const showBannerWithDelay = () => {\n      // Use requestIdleCallback for non-blocking execution\n      if ('requestIdleCallback' in window) {\n        requestIdleCallback(() => {\n          setTimeout(() => {\n            if (!localStorage.getItem('cookieConsent')) {\n              requestAnimationFrame(() => {\n                banner.style.opacity = '1';\n                banner.style.transform = 'translateY(0)';\n              });\n            }\n          }, 1000);\n        });\n      } else {\n        // Fallback for browsers without requestIdleCallback\n        setTimeout(() => {\n          if (!localStorage.getItem('cookieConsent')) {\n            banner.style.opacity = '1';\n            banner.style.transform = 'translateY(0)';\n          }\n        }, 1000);\n      }\n    };\n\n    const hideBanner = () => {\n      requestAnimationFrame(() => {\n        banner.style.opacity = '0';\n        banner.style.transform = 'translateY(100vh)';\n        \n        // Remove from DOM after animation for better performance\n        setTimeout(() => {\n          if (banner.parentNode) {\n            banner.parentNode.removeChild(banner);\n          }\n        }, 300);\n      });\n    };\n\n    const setCookieConsent = (value) => {\n      try {\n        localStorage.setItem('cookieConsent', value);\n        hideBanner();\n        \n        // Dispatch custom event for analytics or other tracking\n        if ('CustomEvent' in window) {\n          const event = new CustomEvent('cookieConsentChanged', {\n            detail: { consent: value }\n          });\n          document.dispatchEvent(event);\n        }\n      } catch (error) {\n        console.warn('Could not save cookie consent preference:', error);\n      }\n    };\n\n    // Optimized event delegation for better performance\n    const handleButtonClick = (e) => {\n      const target = e.target;\n      if (!target.matches('button')) return;\n\n      switch (target.id) {\n        case 'cookie-accept':\n          setCookieConsent('accepted');\n          break;\n        case 'cookie-reject':\n          setCookieConsent('rejected');\n          break;\n        case 'cookie-settings':\n          setCookieConsent('settings');\n          break;\n      }\n    };\n\n    // Use event delegation for better performance\n    banner.addEventListener('click', handleButtonClick, { passive: true });\n\n    // Enhanced keyboard support\n    banner.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        setCookieConsent('rejected');\n      }\n    }, { passive: false });\n\n    // Show banner with optimized timing\n    showBannerWithDelay();\n\n    // Cleanup function for memory management\n    window.addEventListener('beforeunload', () => {\n      banner.removeEventListener('click', handleButtonClick);\n    });\n  }\n\n  // Initialize when browser is idle\n  initializeCookieConsent();\n<\/script>"])),maybeRenderHead(),addAttribute(c,"id"),addAttribute(`opacity-0 translate-y-full transition-all duration-300 ease-in-out fixed inset-x-0 bottom-0 z-50 ${i}`,"class"),addAttribute(`fixed ${{"bottom-left":"bottom-4 left-4","bottom-right":"bottom-4 right-4","bottom-center":"bottom-4 left-1/2 transform -translate-x-1/2"}[l]} z-50 max-w-[360px] rounded-lg text-white p-4 shadow-lg bg-card`,"class"),a,r,addAttribute(s,"href"))}),"/Users/zitrono/dev/web/ralph-web/src/components/utils/CookieConsent.astro",void 0);var _a,__freeze=Object.freeze,__defProp=Object.defineProperty,__template=(e,n)=>__freeze(__defProp(e,"raw",{value:__freeze(e.slice())}));const $$Astro=createAstro("https://zitrono.github.io"),$$LoginModal=createComponent(((e,n,t)=>{const o=e.createAstro($$Astro,n,t);o.self=$$LoginModal;const{class:i="",title:a="Private Beta Access",message:r="Ralph is currently in private beta. Please contact us for access to our AI-powered private equity platform.",contactEmail:s="Konstantin@beneficious.com",id:l="login-modal"}=o.props;return renderTemplate(_a||(_a=__template(["","<div","",' role="dialog" aria-modal="true" aria-labelledby="modal-title" aria-describedby="modal-description"> <div class="absolute inset-0 bg-black/50 backdrop-blur-sm" onclick="closeLoginModal()" aria-hidden="true"></div> <div class="relative bg-card rounded-lg p-8 max-w-md w-full mx-4 border border-gray-700"> <button onclick="closeLoginModal()" class="absolute top-4 right-4 text-gray-400 hover:text-white transition-colors" aria-label="Close modal" tabindex="0"> <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path> </svg> </button> <div class="text-center"> <h2 id="modal-title" class="text-2xl font-bold text-white mb-4">','</h2> <p id="modal-description" class="text-secondary mb-6"> ',' </p> <div class="flex flex-col sm:flex-row gap-4"> '," "," </div> </div> </div> </div> \x3c!-- Performance-optimized modal with client:load for immediate interactivity --\x3e <script client:load>\n  // Optimized modal functionality with proper performance considerations\n  function initializeLoginModal() {\n    // Global functions for modal control with performance optimizations\n    window.showLoginModal = function () {\n      const modal = document.getElementById('login-modal');\n      if (modal) {\n        // Use requestAnimationFrame for smooth UI updates\n        requestAnimationFrame(() => {\n          modal.classList.remove('hidden');\n          // Add fade-in animation\n          modal.style.opacity = '0';\n          modal.offsetHeight; // Force reflow\n          modal.style.opacity = '1';\n          \n          // Enhanced focus management\n          const firstButton = modal.querySelector('button:not([disabled])');\n          if (firstButton) {\n            firstButton.focus();\n          }\n          \n          // Store the previously focused element for return focus\n          const activeElement = document.activeElement;\n          modal.setAttribute(\n            'data-previous-focus',\n            activeElement ? (activeElement.id || activeElement.tagName) : ''\n          );\n          \n          // Prevent body scroll when modal is open\n          document.body.style.overflow = 'hidden';\n        });\n      }\n    };\n\n    window.closeLoginModal = function () {\n      const modal = document.getElementById('login-modal');\n      if (modal) {\n        // Add fade-out animation\n        modal.style.opacity = '0';\n        \n        setTimeout(() => {\n          modal.classList.add('hidden');\n          modal.style.opacity = '';\n          \n          // Restore body scroll\n          document.body.style.overflow = '';\n          \n          // Return focus to previously focused element\n          const previousFocus = modal.getAttribute('data-previous-focus');\n          if (previousFocus) {\n            const elementToFocus = document.getElementById(previousFocus) || \n                                 document.querySelector(previousFocus.toLowerCase());\n            if (elementToFocus && elementToFocus.focus) {\n              elementToFocus.focus();\n            }\n          }\n        }, 150); // Match animation duration\n      }\n    };\n\n    // Enhanced keyboard handling with performance optimizations\n    const handleKeydown = function (e) {\n      const modal = document.getElementById('login-modal');\n      if (!modal || modal.classList.contains('hidden')) return;\n\n      if (e.key === 'Escape') {\n        e.preventDefault();\n        window.closeLoginModal();\n        return;\n      }\n\n      // Optimized focus trap - keep focus within modal\n      if (e.key === 'Tab') {\n        const focusableElements = modal.querySelectorAll(\n          'button:not([disabled]), [href]:not([disabled]), input:not([disabled]), select:not([disabled]), textarea:not([disabled]), [tabindex]:not([tabindex=\"-1\"]):not([disabled])'\n        );\n        \n        if (focusableElements.length === 0) return;\n        \n        const firstElement = focusableElements[0];\n        const lastElement = focusableElements[focusableElements.length - 1];\n\n        if (e.shiftKey && document.activeElement === firstElement) {\n          e.preventDefault();\n          lastElement.focus();\n        } else if (!e.shiftKey && document.activeElement === lastElement) {\n          e.preventDefault();\n          firstElement.focus();\n        }\n      }\n    };\n\n    // Use passive event listener for better performance\n    document.addEventListener('keydown', handleKeydown, { passive: false });\n\n    // Cleanup function for memory management\n    window.addEventListener('beforeunload', () => {\n      document.removeEventListener('keydown', handleKeydown);\n    });\n  }\n\n  // Initialize immediately for interactive modal\n  initializeLoginModal();\n<\/script>"])),maybeRenderHead(),addAttribute(l,"id"),addAttribute(`hidden fixed inset-0 z-50 flex items-center justify-center animate-fade-in ${i}`,"class"),a,r,renderComponent(e,"Button",$$Button,{variant:"secondary",onclick:"closeLoginModal()",class:"flex-1"},{default:e=>renderTemplate`Close`}),renderComponent(e,"Button",$$Button,{variant:"primary",href:`mailto:${s}?subject=Ralph%20Beta%20Access%20Request&body=Hello%2C%20I%20would%20like%20to%20request%20access%20to%20Ralph%27s%20private%20beta.`,class:"flex-1"},{default:e=>renderTemplate`
Request Access
`}))}),"/Users/zitrono/dev/web/ralph-web/src/components/utils/LoginModal.astro",void 0);export{$$CookieConsent as $,$$LoginModal as a};