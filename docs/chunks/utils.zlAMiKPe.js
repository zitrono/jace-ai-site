import{c as createAstro,a as createComponent,m as maybeRenderHead,b as addAttribute,e as renderComponent,d as renderTemplate}from"./vendor-astro.EOYbf6vM.js";import"kleur/colors";import"html-escaper";import{$ as $$Button}from"./primitives.D2TnoxMK.js";import{s as siteConfig}from"./components.DyTxeM93.js";import"clsx";const $$Astro$1=createAstro("https://zitrono.github.io"),$$LoginModal=createComponent((async(e,t,n)=>{const o=e.createAstro($$Astro$1,t,n);o.self=$$LoginModal;const{class:i="",open:s=!1}=o.props;return renderTemplate`<!-- Modal Overlay -->${maybeRenderHead()}<div id="loginModal"${addAttribute(`fixed inset-0 z-50 ${s?"":"hidden"} ${i}`,"class")} aria-labelledby="loginModalTitle" role="dialog" aria-modal="true"> <!-- Backdrop --> <div class="fixed inset-0 bg-black/80 backdrop-blur-sm transition-opacity" id="loginBackdrop"></div> <!-- Modal Content --> <div class="fixed inset-0 z-10 overflow-y-auto"> <div class="flex min-h-full items-center justify-center p-4 text-center sm:p-0"> <div class="relative transform overflow-hidden rounded-lg bg-background border border-accent/20 shadow-2xl transition-all sm:my-8 sm:w-full sm:max-w-md" id="loginModalContent"> <!-- Close Button --> <button type="button" class="absolute right-4 top-4 text-muted hover:text-primary transition-colors z-10" id="closeLoginModal" aria-label="Close login modal"> <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path> </svg> </button> <!-- Modal Header and Form --> <div class="border-l-4 border-accent bg-card/30 px-8 py-10"> <!-- Logo and Title --> <div class="text-center mb-8"> <div class="w-12 h-12 bg-accent rounded-lg flex items-center justify-center mx-auto mb-4"> <svg class="w-6 h-6 text-background font-bold" fill="currentColor" viewBox="0 0 24 24"> <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"></path> </svg> </div> <h2 id="loginModalTitle" class="text-xl font-bold text-primary mb-2">Sign In to Ralph</h2> <p class="text-secondary text-sm">Access your PE intelligence platform</p> </div> <!-- Login Form --> <form id="modalLoginForm" class="space-y-6"> <!-- Username Field --> <div> <label for="modalUsername" class="block text-sm font-medium text-primary mb-2">
Username or Email
</label> <input type="text" id="modalUsername" name="username" required class="w-full px-4 py-3 bg-background border border-neutral-600 rounded-md text-primary placeholder-muted focus:outline-none focus:ring-2 focus:ring-accent focus:border-transparent transition-colors" placeholder="Enter your username or email"> </div> <!-- Password Field --> <div> <label for="modalPassword" class="block text-sm font-medium text-primary mb-2">
Password
</label> <div class="relative"> <input type="password" id="modalPassword" name="password" required class="w-full px-4 py-3 bg-background border border-neutral-600 rounded-md text-primary placeholder-muted focus:outline-none focus:ring-2 focus:ring-accent focus:border-transparent transition-colors pr-12" placeholder="Enter your password"> <button type="button" id="modalTogglePassword" class="absolute right-3 top-1/2 transform -translate-y-1/2 text-muted hover:text-primary transition-colors"> <svg id="modalEyeIcon" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path> </svg> </button> </div> </div> <!-- Error Message --> <div id="modalErrorMessage" class="hidden bg-red-900/20 border border-red-500/30 rounded-md p-3"> <div class="flex items-center"> <svg class="w-4 h-4 text-red-400 mr-2" fill="currentColor" viewBox="0 0 20 20"> <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path> </svg> <span id="modalErrorText" class="text-sm text-red-400"></span> </div> </div> <!-- Remember Me --> <div class="flex items-center"> <input type="checkbox" id="modalRememberMe" class="w-4 h-4 text-accent bg-background border-neutral-600 rounded focus:ring-accent focus:ring-2"> <label for="modalRememberMe" class="ml-2 text-sm text-secondary">Remember me</label> </div> <!-- Submit Button --> <div> ${renderComponent(e,"Button",$$Button,{type:"submit",variant:"primary",size:"lg",class:"w-full relative",id:"modalLoginButton"},{default:async e=>renderTemplate` <span id="modalLoginButtonText">Sign In</span> <div id="modalLoginSpinner" class="hidden absolute inset-0 flex items-center justify-center"> <svg class="animate-spin w-5 h-5 text-background" fill="none" viewBox="0 0 24 24"> <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle> <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path> </svg> </div> `})} </div> </form> <!-- Alternative Actions --> <div class="mt-6 pt-6 border-t border-neutral-600 space-y-3"> <button type="button" class="w-full text-sm text-accent hover:text-accent/80 transition-colors" onclick="window.location.href='/ralph-web/login'">
Forgot password?
</button> <div class="text-center text-xs text-muted">
Don't have an account?
<a${addAttribute(siteConfig.demo.url,"href")} class="text-accent hover:text-accent/80">Request demo access</a> </div> </div> </div> </div> </div> </div> </div> <!-- Client-side JavaScript --> `}),"/Users/zitrono/dev/web/ralph-web/src/components/utils/LoginModal.astro",void 0);var _a,__freeze=Object.freeze,__defProp=Object.defineProperty,__template=(e,t)=>__freeze(__defProp(e,"raw",{value:__freeze(e.slice())}));const $$Astro=createAstro("https://zitrono.github.io"),$$CookieConsent=createComponent(((e,t,n)=>{const o=e.createAstro($$Astro,t,n);o.self=$$CookieConsent;const{class:i="",title:s="Cookie Preferences",message:r="We use cookies to enhance your experience. Choose your preferences below. Read about our privacy policy",privacyLink:a="/privacy",position:l="bottom-left",id:d="cookie-banner"}=o.props;return renderTemplate(_a||(_a=__template(["\x3c!-- Cookie Banner - initially hidden, positioned bottom-left --\x3e\x3c!-- Progressive Enhancement: Non-critical functionality loaded with client:idle --\x3e","<div","",' style="display: none;" data-testid="cookie-consent-banner"> <div','> <div class="flex flex-col gap-3"> <div> <h2 class="mb-1 text-sm font-medium">','</h2> <p class="text-xs text-secondary"> '," <a"," target=\"_blank\" rel=\"noopener noreferrer\" class=\"text-white hover:text-gray-300 underline\">here</a>.\n</p> </div> <div class=\"flex gap-2 justify-between\"> <button id=\"cookie-settings\" class=\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 active:scale-[.99] underline-offset-4 hover:underline border-0 h-7 px-3 text-sm cursor-pointer text-white hover:text-gray-300\" aria-label=\"Open cookie settings\">\nSettings\n</button> <div class=\"flex gap-2\"> <button id=\"cookie-reject\" class=\"inline-flex items-center justify-center gap-2 border border-white/20 whitespace-nowrap rounded-md font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 active:scale-[.99] shadow-sm h-7 px-3 text-sm cursor-pointer text-white hover:bg-white/10\" aria-label=\"Reject all cookies\">\nReject\n</button> <button id=\"cookie-accept\" class=\"inline-flex items-center justify-center gap-2 border border-transparent whitespace-nowrap rounded-md font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 active:scale-[.99] shadow-sm h-7 px-3 text-sm cursor-pointer bg-accent text-accent-foreground hover:bg-accent/90\" aria-label=\"Accept all cookies\">\nAccept\n</button> </div> </div> </div> </div> </div> \x3c!-- Simplified cookie consent implementation compliant with CLAUDE.md --\x3e <script>\n  // Self-contained cookie consent functionality using Tailwind transitions\n  (function() {\n    'use strict';\n    \n    // Check if consent was already given\n    const existingConsent = localStorage.getItem('cookieConsent');\n    const banner = document.getElementById('cookie-banner');\n\n    if (existingConsent || !banner) return;\n\n    // Simple state management\n    let isVisible = false;\n    let isAnimating = false;\n\n    // Show banner function using Tailwind classes\n    function showBanner() {\n      if (isVisible || isAnimating) return;\n      \n      isAnimating = true;\n      banner.style.display = 'block';\n      \n      // Force reflow to ensure transition works\n      banner.offsetHeight;\n      \n      // Remove hiding classes to trigger CSS transition\n      banner.classList.remove('opacity-0', 'translate-y-full');\n      banner.classList.add('opacity-100', 'translate-y-0');\n      \n      isVisible = true;\n      setTimeout(() => {\n        isAnimating = false;\n      }, 300);\n    }\n\n    // Hide banner function using Tailwind classes\n    function hideBanner() {\n      if (!isVisible || isAnimating) return;\n      \n      isAnimating = true;\n      \n      // Add hiding classes to trigger CSS transition\n      banner.classList.remove('opacity-100', 'translate-y-0');\n      banner.classList.add('opacity-0', 'translate-y-full');\n      \n      isVisible = false;\n      setTimeout(() => {\n        isAnimating = false;\n        banner.style.display = 'none';\n      }, 300);\n    }\n\n    // Handle consent\n    function setCookieConsent(value) {\n      try {\n        localStorage.setItem('cookieConsent', value);\n        \n        // Dispatch custom event\n        if ('CustomEvent' in window) {\n          const event = new CustomEvent('cookieConsentChanged', {\n            detail: { consent: value },\n          });\n          document.dispatchEvent(event);\n        }\n        \n        hideBanner();\n      } catch (error) {\n        console.warn('Could not save cookie consent preference:', error);\n      }\n    }\n\n    // Button click handlers\n    document.getElementById('cookie-accept')?.addEventListener('click', () => {\n      setCookieConsent('accepted');\n    });\n    \n    document.getElementById('cookie-reject')?.addEventListener('click', () => {\n      setCookieConsent('rejected');\n    });\n    \n    document.getElementById('cookie-settings')?.addEventListener('click', () => {\n      setCookieConsent('settings');\n    });\n\n    // Keyboard support (Escape key)\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && isVisible) {\n        setCookieConsent('rejected');\n      }\n    });\n\n    // Show banner after delay\n    setTimeout(() => {\n      if (!localStorage.getItem('cookieConsent')) {\n        showBanner();\n      }\n    }, 1000);\n  })();\n<\/script>"])),maybeRenderHead(),addAttribute(d,"id"),addAttribute(`opacity-0 translate-y-full transition-all duration-300 ease-in-out fixed inset-x-0 bottom-0 z-40 ${i}`,"class"),addAttribute(`fixed ${{"bottom-left":"bottom-4 left-4","bottom-right":"bottom-4 right-4","bottom-center":"bottom-4 left-1/2 transform -translate-x-1/2"}[l]} z-40 max-w-[360px] rounded-lg text-white p-4 shadow-lg bg-card`,"class"),s,r,addAttribute(a,"href"))}),"/Users/zitrono/dev/web/ralph-web/src/components/utils/CookieConsent.astro",void 0);export{$$CookieConsent as $,$$LoginModal as a};