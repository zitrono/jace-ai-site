---
interface Props {
	title: string;
	description?: string;
	image?: string;
	ogType?: string;
	canonicalUrl?: string;
}

const { 
	title, 
	description = "Ralph - See Tomorrow's Opportunities Today. AI-powered predictive intelligence for private equity firms.",
	image = "/ralph-web/ralph_favicon.svg",
	ogType = "website",
	canonicalUrl = Astro.url.href
} = Astro.props;

// Base URL for canonical and Open Graph URLs
const baseUrl = "https://zitrono.github.io";
const fullUrl = canonicalUrl.startsWith('http') ? canonicalUrl : `${baseUrl}${canonicalUrl}`;
const fullImageUrl = image.startsWith('http') ? image : `${baseUrl}${image}`;
---

<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="description" content={description} />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />
  <link rel="icon" type="image/svg+xml" href="/ralph-web/ralph_favicon.svg" />
  <meta name="generator" content={Astro.generator} />
  <title>{title}</title>
  
  <!-- Canonical URL -->
  <link rel="canonical" href={fullUrl} />
  
  <!-- Open Graph / Facebook -->
  <meta property="og:type" content={ogType} />
  <meta property="og:url" content={fullUrl} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={fullImageUrl} />
  <meta property="og:site_name" content="Ralph - AI-Native Private Equity Platform" />
  <meta property="og:locale" content="en_US" />
  
  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={fullUrl} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={fullImageUrl} />
  <meta property="twitter:creator" content="@RalphAI" />
  <meta property="twitter:site" content="@RalphAI" />
  
  <!-- Additional SEO Meta Tags -->
  <meta name="author" content="Ralph AI" />
  <meta name="keywords" content="AI, private equity, predictive intelligence, investment, portfolio management, deal sourcing, due diligence, risk assessment" />
  <meta name="robots" content="index, follow" />
  <meta name="googlebot" content="index, follow" />
  <meta name="theme-color" content="#FFDC61" />
  <meta name="msapplication-TileColor" content="#FFDC61" />
  
  <!-- Structured Data (JSON-LD) -->
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "SoftwareApplication",
      "name": "Ralph",
      "description": "AI-Native Private Equity Platform - See Tomorrow's Opportunities Today",
      "url": "https://zitrono.github.io/ralph-web/",
      "logo": "https://zitrono.github.io/ralph-web/ralph_favicon.svg",
      "applicationCategory": "BusinessApplication",
      "operatingSystem": "Web",
      "offers": {
        "@type": "Offer",
        "price": "0",
        "priceCurrency": "USD"
      },
      "provider": {
        "@type": "Organization",
        "name": "Ralph AI",
        "url": "https://zitrono.github.io/ralph-web/",
        "logo": "https://zitrono.github.io/ralph-web/ralph_favicon.svg",
        "description": "AI-powered predictive intelligence for private equity firms",
        "industry": "Financial Technology",
        "foundingDate": "2024",
        "contactPoint": {
          "@type": "ContactPoint",
          "email": "Konstantin@beneficious.com",
          "contactType": "customer service"
        }
      },
      "featureList": [
        "AI-powered deal sourcing",
        "Predictive market intelligence",
        "Risk assessment automation",
        "Portfolio management optimization",
        "Due diligence enhancement"
      ]
    }
  </script>
  
  <!-- Font Preloading for Performance -->
  <link rel="preload" href="/ralph-web/fonts/Geist-Regular.woff2" as="font" type="font/woff2" crossorigin>
  <link rel="preload" href="/ralph-web/fonts/Geist-SemiBold.woff2" as="font" type="font/woff2" crossorigin>
  
  <style is:global>
    @import '../styles/tailwind.css';
    @import '../styles/components.css';
    
    /* Font Face Declarations */
    @font-face {
      font-family: 'Geist';
      src: url('/ralph-web/fonts/Geist-Regular.woff2') format('woff2');
      font-weight: 400;
      font-style: normal;
      font-display: swap;
    }
    
    @font-face {
      font-family: 'Geist';
      src: url('/ralph-web/fonts/Geist-SemiBold.woff2') format('woff2');
      font-weight: 600;
      font-style: normal;
      font-display: swap;
    }
    
    /* POM-Validated CSS Variables */
    :root {
      /* Background colors - from POM expectedStyles */
      --pom-bg-body: rgb(40, 40, 40);
      --pom-bg-secondary: rgb(65, 65, 65);
      --pom-bg-card: rgb(53, 53, 53);
      
      /* Text colors - from POM expectedStyles */
      --pom-text-primary: rgb(255, 255, 255);
      --pom-text-secondary: rgba(255, 246, 238, 0.72);
      --pom-text-muted: rgb(156, 163, 175);
      
      /* Accent colors - from POM expectedStyles */
      --pom-accent: rgb(255, 220, 97);
      --pom-accent-text: rgb(41, 48, 69);
      
      /* Button specifications - from POM expectedStyles */
      --pom-btn-padding: 0px 24px;
      --pom-btn-height: 40px;
      --pom-btn-height-sm: 32px;
      --pom-btn-radius: 6px;
      --pom-btn-radius-lg: 8px;
      
      /* Typography - from POM expectedStyles */
      --pom-font-hero-size: 48px;
      --pom-font-hero-weight: 600;
      --pom-font-subtitle-size: 18px;
      --pom-font-subtitle-color: rgba(255, 246, 238, 0.72);
      
      /* Spacing - from POM requirements */
      --pom-section-padding-top: 96px;
      --pom-section-padding-bottom: 128px;
      
      /* Mobile specific - from POM mobileRequirements */
      --pom-mobile-header-height: 64px;
      --pom-mobile-touch-target: 44px;
    }
    
    
    /* iOS horizontal scroll prevention */
    html, body {
      overflow-x: hidden;
      touch-action: pan-y pinch-zoom;
    }
    
    /* Apply POM body background */
    body {
      background-color: var(--pom-bg-body);
    }
    
    /* Hero subtitle color */
    .hero-subtitle {
      color: var(--pom-text-secondary);
    }
    
    /* Header transparent background */
    .header-transparent {
      background-color: rgba(40, 40, 40, 0.5);
      backdrop-filter: blur(12px);
    }
    
    /* Background utilities */
    .bg-primary {
      background-color: var(--pom-bg-body);
    }
    
    .bg-secondary {
      background-color: var(--pom-bg-secondary);
    }
    
    .bg-card {
      background-color: var(--pom-bg-card);
    }
    
    .bg-accent {
      background-color: var(--pom-accent);
    }
    
    /* Text color utilities */
    .text-accent {
      color: var(--pom-accent);
    }
    
    .text-accent-text {
      color: var(--pom-accent-text);
    }
    
    .text-secondary {
      color: var(--pom-text-secondary);
    }
    
    .text-muted {
      color: var(--pom-text-muted);
    }
    
    /* Mobile-specific header adjustments */
    @media (max-width: 640px) {
      /* Reduce header padding on mobile */
      header nav > div {
        padding-top: 0.75rem;
        padding-bottom: 0.75rem;
      }
      
      /* Ensure hamburger menu button is properly sized */
      #mobile-menu-button {
        min-width: 40px;
        min-height: 40px;
        padding: 0.5rem;
      }
    }
    
    /* Header transition for smooth height changes */
    header {
      transition: all 0.3s ease;
    }
    
    /* Ensure consistent header height when scrolled */
    header.scrolled nav > div {
      padding-top: 0.75rem;
      padding-bottom: 0.75rem;
    }
    
    /* Skip to main content styles */
    .sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border: 0;
    }
    
    .focus\:not-sr-only:focus {
      position: static;
      width: auto;
      height: auto;
      padding: 0.5rem 1rem;
      margin: 0;
      overflow: visible;
      clip: auto;
      white-space: normal;
    }
  </style>
</head>
<body class="text-white font-sans antialiased">
  <!-- Skip to main content link for keyboard users -->
  <a 
    href="#main" 
    class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 focus:z-50 focus:bg-accent focus:text-accent-text focus:px-4 focus:py-2 focus:rounded focus:font-medium focus:no-underline"
  >
    Skip to main content
  </a>
  <slot />
  <script>
    // Mobile menu functionality with smooth animations
    document.addEventListener('DOMContentLoaded', () => {
      const mobileMenuButton = document.getElementById('mobile-menu-button');
      const mobileMenuClose = document.getElementById('mobile-menu-close');
      const mobileMenu = document.getElementById('mobile-menu');
      
      const showMenu = () => {
        if (mobileMenu) {
          mobileMenu.classList.remove('hidden');
          mobileMenu.style.opacity = '0';
          mobileMenu.style.transform = 'translateY(-20px)';
          mobileMenuButton?.setAttribute('aria-expanded', 'true');
          
          // Trigger animation
          requestAnimationFrame(() => {
            mobileMenu.style.opacity = '1';
            mobileMenu.style.transform = 'translateY(0)';
          });
        }
      };
      
      const hideMenu = () => {
        if (mobileMenu) {
          mobileMenu.style.opacity = '0';
          mobileMenu.style.transform = 'translateY(-20px)';
          mobileMenuButton?.setAttribute('aria-expanded', 'false');
          
          setTimeout(() => {
            mobileMenu.classList.add('hidden');
          }, 200);
        }
      };
      
      if (mobileMenuButton) {
        mobileMenuButton.addEventListener('click', showMenu);
      }
      
      if (mobileMenuClose) {
        mobileMenuClose.addEventListener('click', hideMenu);
      }
      
      // Close menu when clicking on backdrop
      if (mobileMenu) {
        mobileMenu.addEventListener('click', (e) => {
          if (e.target === mobileMenu || e.target === mobileMenu.firstElementChild) {
            hideMenu();
          }
        });
      }
    });

    // FAQ toggle functionality with smooth transitions
    window.toggleFAQ = function(button) {
      const content = button.nextElementSibling;
      const arrow = button.querySelector('svg');
      const isExpanded = button.getAttribute('aria-expanded') === 'true';
      
      if (isExpanded) {
        // Collapse
        content.style.maxHeight = content.scrollHeight + 'px';
        content.offsetHeight; // Force reflow
        content.style.maxHeight = '0px';
        content.style.opacity = '0';
        arrow.classList.remove('rotate-180');
        button.setAttribute('aria-expanded', 'false');
        
        setTimeout(() => {
          content.classList.add('hidden');
        }, 300);
      } else {
        // Expand
        content.classList.remove('hidden');
        content.style.maxHeight = '0px';
        content.style.opacity = '0';
        content.offsetHeight; // Force reflow
        content.style.maxHeight = content.scrollHeight + 'px';
        content.style.opacity = '1';
        arrow.classList.add('rotate-180');
        button.setAttribute('aria-expanded', 'true');
        
        setTimeout(() => {
          content.style.maxHeight = 'none';
        }, 300);
      }
    };
    
    // FAQ keyboard handler for accessibility
    window.handleFAQKeydown = function(event, button) {
      if (event.key === 'Enter' || event.key === ' ') {
        event.preventDefault();
        toggleFAQ(button);
      }
    };

    // Cookie consent functionality
    function showCookieBanner() {
      const banner = document.getElementById('cookie-banner');
      if (banner && !localStorage.getItem('cookieConsent')) {
        // Show banner after a short delay
        setTimeout(() => {
          banner.style.opacity = '1';
          banner.style.transform = 'translateY(0)';
        }, 1000);
      }
    }

    function hideCookieBanner() {
      const banner = document.getElementById('cookie-banner');
      if (banner) {
        banner.style.opacity = '0';
        banner.style.transform = 'translateY(100vh)';
      }
    }

    function setCookieConsent(value) {
      localStorage.setItem('cookieConsent', value);
      hideCookieBanner();
    }

    // Cookie consent event listeners
    document.addEventListener('DOMContentLoaded', () => {
      const acceptBtn = document.getElementById('cookie-accept');
      const rejectBtn = document.getElementById('cookie-reject');
      const settingsBtn = document.getElementById('cookie-settings');

      if (acceptBtn) {
        acceptBtn.addEventListener('click', () => setCookieConsent('accepted'));
      }

      if (rejectBtn) {
        rejectBtn.addEventListener('click', () => setCookieConsent('rejected'));
      }

      if (settingsBtn) {
        settingsBtn.addEventListener('click', () => {
          console.log('Cookie settings clicked');
          setCookieConsent('settings');
        });
      }

      // Show banner if consent not given
      showCookieBanner();
    });

    // Login button functionality
    document.addEventListener('DOMContentLoaded', () => {
      const loginButton = document.getElementById('login-button');
      const mobileLoginButton = document.getElementById('mobile-login-button');
      
      const showLoginModalFunc = () => {
        if (typeof showLoginModal === 'function') {
          showLoginModal();
        }
      };
      
      if (loginButton) {
        loginButton.addEventListener('click', showLoginModalFunc);
      }
      
      if (mobileLoginButton) {
        mobileLoginButton.addEventListener('click', showLoginModalFunc);
      }
    });

    // Book a Demo button functionality (optimized with event delegation)
    document.addEventListener('DOMContentLoaded', () => {
      // Use event delegation for better performance
      document.addEventListener('click', (e) => {
        const target = e.target;
        if (target.tagName === 'BUTTON' && 
            (target.textContent.includes('Book a Demo') || target.textContent.includes('Book Demo'))) {
          e.preventDefault();
          window.location.href = 'mailto:Konstantin@beneficious.com?subject=Ralph Demo Request&body=Hello, I would like to schedule a demo of Ralph for my PE firm.';
        }
      });
      
      // Preload critical resources
      const criticalImages = [
        '/ralph-web/ralph_favicon.svg'
      ];
      
      criticalImages.forEach(src => {
        const link = document.createElement('link');
        link.rel = 'preload';
        link.as = 'image';
        link.href = src;
        document.head.appendChild(link);
      });
    });
  </script>
</body>
</html>