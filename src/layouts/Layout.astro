---
interface Props {
  title: string;
  description?: string;
  image?: string;
  ogType?: string;
  canonicalUrl?: string;
}

const {
  title,
  description = "Ralph - See Tomorrow's Opportunities Today. AI-powered predictive intelligence for private equity firms.",
  image = '/ralph-web/ralph_favicon.svg',
  ogType = 'website',
  canonicalUrl = Astro.url.href,
} = Astro.props;

// Base URL for canonical and Open Graph URLs
const baseUrl = 'https://zitrono.github.io';
const fullUrl = canonicalUrl.startsWith('http') ? canonicalUrl : `${baseUrl}${canonicalUrl}`;
const fullImageUrl = image.startsWith('http') ? image : `${baseUrl}${image}`;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/ralph-web/ralph_favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <!-- Canonical URL -->
    <link rel="canonical" href={fullUrl} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={ogType} />
    <meta property="og:url" content={fullUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={fullImageUrl} />
    <meta property="og:site_name" content="Ralph - AI-Native Private Equity Platform" />
    <meta property="og:locale" content="en_US" />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={fullUrl} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={fullImageUrl} />
    <meta property="twitter:creator" content="@RalphAI" />
    <meta property="twitter:site" content="@RalphAI" />

    <!-- Additional SEO Meta Tags -->
    <meta name="author" content="Ralph AI" />
    <meta
      name="keywords"
      content="AI, private equity, predictive intelligence, investment, portfolio management, deal sourcing, due diligence, risk assessment"
    />
    <meta name="robots" content="index, follow" />
    <meta name="googlebot" content="index, follow" />
    <meta name="theme-color" content="#FFDC61" />
    <meta name="msapplication-TileColor" content="#FFDC61" />

    <!-- Structured Data (JSON-LD) -->
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "SoftwareApplication",
        "name": "Ralph",
        "description": "AI-Native Private Equity Platform - See Tomorrow's Opportunities Today",
        "url": "https://zitrono.github.io/ralph-web/",
        "logo": "https://zitrono.github.io/ralph-web/ralph_favicon.svg",
        "applicationCategory": "BusinessApplication",
        "operatingSystem": "Web",
        "offers": {
          "@type": "Offer",
          "price": "0",
          "priceCurrency": "USD"
        },
        "provider": {
          "@type": "Organization",
          "name": "Ralph AI",
          "url": "https://zitrono.github.io/ralph-web/",
          "logo": "https://zitrono.github.io/ralph-web/ralph_favicon.svg",
          "description": "AI-powered predictive intelligence for private equity firms",
          "industry": "Financial Technology",
          "foundingDate": "2024",
          "contactPoint": {
            "@type": "ContactPoint",
            "email": "Konstantin@beneficious.com",
            "contactType": "customer service"
          }
        },
        "featureList": [
          "AI-powered deal sourcing",
          "Predictive market intelligence",
          "Risk assessment automation",
          "Portfolio management optimization",
          "Due diligence enhancement"
        ]
      }
    </script>

    <!-- Critical Resource Preloading for Performance -->
    <link
      rel="preload"
      href="/ralph-web/fonts/Geist-Regular.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="preload"
      href="/ralph-web/fonts/Geist-SemiBold.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="preload"
      href="/ralph-web/fonts/Geist-Bold.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />

    <!-- Preconnect to external domains -->
    <link rel="dns-prefetch" href="//fonts.googleapis.com" />
    <link rel="dns-prefetch" href="//www.google-analytics.com" />

    <!-- Resource hints for critical assets -->
    <link rel="prefetch" href="/ralph-web/ralph_favicon.svg" />

    <!-- Web Vitals and Performance Monitoring -->
    <script type="module">
      // Comprehensive performance monitoring with Web Vitals
      import('/ralph-web/src/utils/web-vitals.js')
        .then(({ initPerformanceMonitoring, defaultConfig }) => {
          const config = {
            ...defaultConfig,
            enableConsoleLogging: true,
            enableAnalytics: false, // Enable in production
            debug: false,
            thresholds: {
              CLS: 0.1,
              FID: 100,
              LCP: 2500,
              FCP: 1800,
              TTFB: 800,
            },
          };

          initPerformanceMonitoring(config).then((budget) => {
            // Store budget globally for debugging
            window.performanceBudget = budget;

            // Log performance summary after initial load
            setTimeout(() => {
              const score = budget.getPerformanceScore();
              console.log(`🎯 Performance Score: ${score}/100`);

              if (score < 80) {
                console.warn(
                  '⚠️ Performance could be improved. Check the console for specific metrics.'
                );
              }
            }, 3000);
          });
        })
        .catch(() => {
          // Fallback for when web-vitals module is not available
          console.log('📊 Performance monitoring not available');
        });

      // Resource loading optimization
      const criticalImages = ['/ralph-web/ralph_favicon.svg'];
      criticalImages.forEach((src) => {
        const link = document.createElement('link');
        link.rel = 'preload';
        link.as = 'image';
        link.href = src;
        document.head.appendChild(link);
      });

      // Performance budget monitoring
      window.addEventListener('performanceBudgetExceeded', (event) => {
        console.warn('🚨 Performance Budget Exceeded:', event.detail);
      });
    </script>

    <style is:global>
      @import '../styles/design-tokens.css';
      @import '../styles/tailwind.css';

      /* Font Face Declarations with Inter fallback */
      @font-face {
        font-family: 'Geist';
        src: url('/ralph-web/fonts/Geist-Regular.woff2') format('woff2');
        font-weight: 400;
        font-style: normal;
        font-display: swap;
      }

      @font-face {
        font-family: 'Geist';
        src: url('/ralph-web/fonts/Geist-SemiBold.woff2') format('woff2');
        font-weight: 500;
        font-style: normal;
        font-display: swap;
      }

      @font-face {
        font-family: 'Geist';
        src: url('/ralph-web/fonts/Geist-SemiBold.woff2') format('woff2');
        font-weight: 600;
        font-style: normal;
        font-display: swap;
      }

      @font-face {
        font-family: 'Geist';
        src: url('/ralph-web/fonts/Geist-Bold.woff2') format('woff2');
        font-weight: 700;
        font-style: normal;
        font-display: swap;
      }

      /* Additional Layout-specific CSS Variables */
      :root {
        /* Additional POM variables not in design system */
        --pom-btn-height-sm: 32px;
        --pom-btn-radius-lg: 8px;
        --pom-font-subtitle-color: rgba(255, 246, 238, 0.72);
        --pom-section-padding-top: 96px;
        --pom-section-padding-bottom: 128px;
        --pom-mobile-header-height: 64px;
        --pom-mobile-touch-target: 44px;
      }

      /* iOS horizontal scroll prevention */
      html,
      body {
        overflow-x: hidden;
        touch-action: pan-y pinch-zoom;
      }

      /* Apply POM body background and font */
      body {
        background-color: var(--pom-bg-body);
        font-family: var(--font-primary);
      }

      /* Hero subtitle color */
      .hero-subtitle {
        color: var(--pom-text-secondary);
      }

      /* Header transparent background */
      .header-transparent {
        background-color: rgba(40, 40, 40, 0.5);
        backdrop-filter: blur(12px);
      }

      /* Background utilities */
      .bg-primary {
        background-color: var(--pom-bg-body);
      }

      .bg-secondary {
        background-color: var(--pom-bg-secondary);
      }

      .bg-card {
        background-color: var(--pom-bg-card);
      }

      .bg-accent {
        background-color: var(--pom-accent);
      }

      /* Text color utilities */
      .text-accent {
        color: var(--pom-accent);
      }

      .text-accent-text {
        color: var(--pom-accent-text);
      }

      .text-secondary {
        color: var(--pom-text-secondary);
      }

      .text-muted {
        color: var(--pom-text-muted);
      }

      /* Mobile-specific header adjustments */
      @media (max-width: 640px) {
        /* Reduce header padding on mobile */
        header nav > div {
          padding-top: 0.75rem;
          padding-bottom: 0.75rem;
        }

        /* Ensure hamburger menu button is properly sized */
        #mobile-menu-button {
          min-width: 40px;
          min-height: 40px;
          padding: 0.5rem;
        }
      }

      /* Header transition for smooth height changes */
      header {
        transition: all 0.3s ease;
      }

      /* Ensure consistent header height when scrolled */
      header.scrolled nav > div {
        padding-top: 0.75rem;
        padding-bottom: 0.75rem;
      }

      /* Typography utilities */
      .heading-hero {
        font-size: 2.25rem;
        font-weight: 600;
        line-height: 1.2;
        letter-spacing: -0.025em;
      }

      @media (min-width: 640px) {
        .heading-hero {
          font-size: 3.75rem;
        }
      }

      .heading-1 {
        font-size: 1.875rem;
        font-weight: 700;
        line-height: 1.2;
        letter-spacing: -0.025em;
        color: rgb(255, 255, 255);
      }

      @media (min-width: 640px) {
        .heading-1 {
          font-size: 3rem;
        }
      }

      .heading-2 {
        font-size: 1.5rem;
        font-weight: 700;
        line-height: 1.2;
        letter-spacing: -0.025em;
        color: rgb(255, 255, 255);
      }

      @media (min-width: 640px) {
        .heading-2 {
          font-size: 2.25rem;
        }
      }

      .heading-3 {
        font-size: 1.25rem;
        font-weight: 600;
        color: rgb(255, 255, 255);
      }

      @media (min-width: 640px) {
        .heading-3 {
          font-size: 1.5rem;
        }
      }

      .text-text-secondary {
        color: var(--pom-text-secondary);
      }

      .text-text-muted {
        color: var(--pom-text-muted);
      }

      .text-body {
        color: rgb(209, 213, 219);
      }

      /* Gradient text utilities */
      .gradient-text-primary {
        background: linear-gradient(to right, rgb(253, 224, 71), rgb(234, 179, 8));
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
      }

      .gradient-hero-title {
        background: linear-gradient(353deg, rgb(153, 153, 153) 36%, rgb(255, 255, 255) 90%);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        color: rgba(0, 0, 0, 0);
      }

      /* Badge utilities */
      .badge {
        display: inline-flex;
        align-items: center;
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 500;
      }

      .badge-certification {
        background-color: var(--pom-bg-card);
        color: var(--pom-text-muted);
        border: 2px solid rgba(255, 255, 255, 0.2);
      }

      /* Navigation utilities */
      .nav-link {
        font-weight: 600;
        color: rgb(255, 255, 255);
        text-decoration: none;
        transition: color 0.2s;
      }

      .nav-link:hover {
        color: var(--pom-accent);
      }

      /* Mobile navigation has different font weight for visual parity */
      .mobile-nav-link {
        font-weight: 500;
        font-family: 'Geist', system-ui, sans-serif;
        color: rgb(255, 255, 255);
        text-decoration: none;
        transition: color 0.2s;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }

      .mobile-nav-link:hover {
        color: var(--pom-accent);
      }

      /* Company logos */
      .company-logos-opacity {
        opacity: 0.8;
      }

      /* Mobile CTA responsive styles */
      .mobile-cta-responsive {
        font-size: 0.875rem;
      }

      @media (max-width: 359px) {
        .mobile-cta-responsive {
          padding: 0 0.5rem;
          font-size: 0.75rem;
        }
      }

      /* FAQ transition styles for smooth expand/collapse */
      .faq-content {
        transition:
          max-height 0.3s ease-out,
          opacity 0.3s ease-out;
        overflow: hidden;
      }

      /* Arrow rotation transition */
      .faq-arrow {
        transition: transform 0.3s ease-out;
      }

      /* Mobile menu transitions */
      #mobile-menu {
        transition:
          opacity 0.2s ease-out,
          transform 0.2s ease-out;
      }

      /* Accessibility: Screen reader only content */
      .sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border: 0;
      }

      .focus\:not-sr-only:focus {
        position: static;
        width: auto;
        height: auto;
        padding: 0.5rem 1rem;
        margin: 0;
        overflow: visible;
        clip: auto;
        white-space: normal;
      }

      /* Accessibility: Global focus-visible styles */
      *:focus-visible {
        outline: 2px solid var(--pom-accent);
        outline-offset: 2px;
        border-radius: 2px;
      }

      /* Remove default focus outline for mouse users */
      *:focus:not(:focus-visible) {
        outline: none;
      }

      /* High contrast focus for buttons */
      button:focus-visible,
      .btn:focus-visible,
      [role='button']:focus-visible {
        outline: 3px solid var(--pom-accent);
        outline-offset: 2px;
        box-shadow: 0 0 0 1px var(--pom-accent-text);
      }

      /* Focus for interactive elements */
      a:focus-visible,
      input:focus-visible,
      textarea:focus-visible,
      select:focus-visible {
        outline: 2px solid var(--pom-accent);
        outline-offset: 2px;
      }

      /* Enhanced focus for CTA buttons */
      .btn-primary:focus-visible {
        outline: 3px solid rgb(255, 255, 255);
        outline-offset: 2px;
        box-shadow: 0 0 0 6px var(--pom-accent);
      }

      /* Accessibility: Minimum touch target sizes */
      button,
      .btn,
      [role='button'],
      a {
        min-height: 44px;
        min-width: 44px;
      }

      /* Exception for inline links in text */
      p a,
      li a,
      .text a {
        min-height: auto;
        min-width: auto;
      }

      /* Accessibility: High contrast for better readability */
      .text-high-contrast {
        color: rgb(255, 255, 255);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
      }

      /* Accessibility: Focus trap for modals */
      .focus-trap {
        position: relative;
      }

      .focus-trap::before,
      .focus-trap::after {
        content: '';
        position: absolute;
        width: 1px;
        height: 1px;
        opacity: 0;
        pointer-events: none;
      }

      /* Accessibility: Reduced motion support */
      @media (prefers-reduced-motion: reduce) {
        *,
        *::before,
        *::after {
          animation-duration: 0.01ms !important;
          animation-iteration-count: 1 !important;
          transition-duration: 0.01ms !important;
          scroll-behavior: auto !important;
        }

        .faq-content,
        .faq-arrow,
        #mobile-menu,
        header {
          transition: none !important;
        }
      }

      /* Accessibility: Better contrast for muted text */
      .text-muted {
        color: rgb(209, 213, 219); /* Improved contrast */
      }

      /* Accessibility: ARIA live regions */
      .sr-live-polite {
        position: absolute;
        left: -10000px;
        width: 1px;
        height: 1px;
        overflow: hidden;
      }

      /* Accessibility: Skip links styling */
      .skip-link {
        position: absolute;
        top: -40px;
        left: 6px;
        background: var(--pom-accent);
        color: var(--pom-accent-text);
        padding: 8px 16px;
        text-decoration: none;
        border-radius: 4px;
        font-weight: 600;
        z-index: 1000;
        transition: top 0.3s;
      }

      .skip-link:focus {
        top: 6px;
      }
    </style>
  </head>
  <body class="bg-neutral-700 text-white font-sans antialiased">
    <!-- Skip navigation links for keyboard users -->
    <div class="sr-only focus-within:not-sr-only">
      <a href="#main" class="skip-link">Skip to main content</a>
      <a href="#navigation" class="skip-link">Skip to navigation</a>
      <a href="#footer" class="skip-link">Skip to footer</a>
    </div>

    <!-- ARIA live regions for dynamic content announcements -->
    <div aria-live="polite" aria-atomic="true" class="sr-live-polite" id="status-messages"></div>
    <div aria-live="assertive" aria-atomic="true" class="sr-live-polite" id="alert-messages"></div>

    <slot />
    <script>
      // Essential functionality extracted from modular TypeScript files
      // Mobile menu functionality
      document.addEventListener('DOMContentLoaded', () => {
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenuClose = document.getElementById('mobile-menu-close');
        const mobileMenu = document.getElementById('mobile-menu');

        const showMenu = () => {
          if (mobileMenu) {
            const statusMessages = document.getElementById('status-messages');
            mobileMenu.classList.remove('hidden');
            mobileMenu.style.opacity = '0';
            mobileMenu.style.transform = 'translateY(-20px)';
            mobileMenuButton?.setAttribute('aria-expanded', 'true');

            // Focus trap - move focus to first focusable element in menu
            const firstFocusable = mobileMenu.querySelector(
              'button, a, input, select, textarea, [tabindex]:not([tabindex="-1"])'
            );

            requestAnimationFrame(() => {
              mobileMenu.style.opacity = '1';
              mobileMenu.style.transform = 'translateY(0)';

              // Announce menu opening and focus first element
              if (statusMessages) {
                statusMessages.textContent = 'Mobile menu opened';
              }
              if (firstFocusable) {
                firstFocusable.focus();
              }
            });
          }
        };

        const hideMenu = () => {
          if (mobileMenu) {
            const statusMessages = document.getElementById('status-messages');
            mobileMenu.style.opacity = '0';
            mobileMenu.style.transform = 'translateY(-20px)';
            mobileMenuButton?.setAttribute('aria-expanded', 'false');

            // Return focus to menu button
            if (mobileMenuButton) {
              mobileMenuButton.focus();
            }

            // Announce menu closing
            if (statusMessages) {
              statusMessages.textContent = 'Mobile menu closed';
            }

            setTimeout(() => {
              mobileMenu.classList.add('hidden');
            }, 200);
          }
        };

        if (mobileMenuButton) {
          mobileMenuButton.addEventListener('click', showMenu);
        }

        if (mobileMenuClose) {
          mobileMenuClose.addEventListener('click', hideMenu);
        }

        if (mobileMenu) {
          mobileMenu.addEventListener('click', (e) => {
            if (e.target === mobileMenu || e.target === mobileMenu.firstElementChild) {
              hideMenu();
            }
          });

          // Keyboard navigation for mobile menu
          mobileMenu.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
              hideMenu();
            }

            // Tab trapping
            if (e.key === 'Tab') {
              const focusableElements = mobileMenu.querySelectorAll(
                'button, a, input, select, textarea, [tabindex]:not([tabindex="-1"])'
              );
              const firstFocusable = focusableElements[0];
              const lastFocusable = focusableElements[focusableElements.length - 1];

              if (e.shiftKey) {
                if (document.activeElement === firstFocusable) {
                  e.preventDefault();
                  lastFocusable.focus();
                }
              } else {
                if (document.activeElement === lastFocusable) {
                  e.preventDefault();
                  firstFocusable.focus();
                }
              }
            }
          });
        }
      });

      // FAQ toggle functionality with accessibility announcements
      window.toggleFAQ = function (button) {
        const content = button.nextElementSibling;
        const arrow = button.querySelector('svg');
        const isExpanded = button.getAttribute('aria-expanded') === 'true';
        const statusMessages = document.getElementById('status-messages');
        const questionText = button.querySelector('h3').textContent;

        if (isExpanded) {
          content.style.maxHeight = content.scrollHeight + 'px';
          content.offsetHeight;
          content.style.maxHeight = '0px';
          content.style.opacity = '0';
          arrow.classList.remove('rotate-180');
          button.setAttribute('aria-expanded', 'false');

          // Announce collapse to screen readers
          if (statusMessages) {
            statusMessages.textContent = `FAQ collapsed: ${questionText}`;
          }

          setTimeout(() => {
            content.classList.add('hidden');
          }, 300);
        } else {
          content.classList.remove('hidden');
          content.style.maxHeight = '0px';
          content.style.opacity = '0';
          content.offsetHeight;
          content.style.maxHeight = content.scrollHeight + 'px';
          content.style.opacity = '1';
          arrow.classList.add('rotate-180');
          button.setAttribute('aria-expanded', 'true');

          // Announce expansion to screen readers
          if (statusMessages) {
            statusMessages.textContent = `FAQ expanded: ${questionText}`;
          }

          setTimeout(() => {
            content.style.maxHeight = 'none';
          }, 300);
        }
      };

      window.handleFAQKeydown = function (event, button) {
        if (event.key === 'Enter' || event.key === ' ') {
          event.preventDefault();
          toggleFAQ(button);
        }
      };

      // Cookie consent functionality
      function showCookieBanner() {
        const banner = document.getElementById('cookie-banner');
        if (banner && !localStorage.getItem('cookieConsent')) {
          setTimeout(() => {
            banner.style.opacity = '1';
            banner.style.transform = 'translateY(0)';
          }, 1000);
        }
      }

      function hideCookieBanner() {
        const banner = document.getElementById('cookie-banner');
        if (banner) {
          banner.style.opacity = '0';
          banner.style.transform = 'translateY(100vh)';
        }
      }

      function setCookieConsent(value) {
        localStorage.setItem('cookieConsent', value);
        hideCookieBanner();
      }

      document.addEventListener('DOMContentLoaded', () => {
        const acceptBtn = document.getElementById('cookie-accept');
        const rejectBtn = document.getElementById('cookie-reject');
        const settingsBtn = document.getElementById('cookie-settings');

        if (acceptBtn) {
          acceptBtn.addEventListener('click', () => setCookieConsent('accepted'));
        }

        if (rejectBtn) {
          rejectBtn.addEventListener('click', () => setCookieConsent('rejected'));
        }

        if (settingsBtn) {
          settingsBtn.addEventListener('click', () => {
            setCookieConsent('settings');
          });
        }

        showCookieBanner();
      });

      // Login button functionality
      document.addEventListener('DOMContentLoaded', () => {
        const loginButton = document.getElementById('login-button');
        const mobileLoginButton = document.getElementById('mobile-login-button');

        const showLoginModalFunc = () => {
          if (typeof showLoginModal === 'function') {
            showLoginModal();
          }
        };

        if (loginButton) {
          loginButton.addEventListener('click', showLoginModalFunc);
        }

        if (mobileLoginButton) {
          mobileLoginButton.addEventListener('click', showLoginModalFunc);
        }
      });

      // Book a Demo button functionality
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('click', (e) => {
          const target = e.target;
          if (
            target.tagName === 'BUTTON' &&
            (target.textContent.includes('Book a Demo') || target.textContent.includes('Book Demo'))
          ) {
            e.preventDefault();
            window.location.href =
              'mailto:Konstantin@beneficious.com?subject=Ralph Demo Request&body=Hello, I would like to schedule a demo of Ralph for my PE firm.';
          }
        });

        // Preload critical resources
        const criticalImages = ['/ralph-web/ralph_favicon.svg'];

        criticalImages.forEach((src) => {
          const link = document.createElement('link');
          link.rel = 'preload';
          link.as = 'image';
          link.href = src;
          document.head.appendChild(link);
        });
      });
    </script>
  </body>
</html>
