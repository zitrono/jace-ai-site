---
import Layout from '../layouts/Layout.astro';
import Header from '../components/layout/Header.astro';
import Footer from '../components/layout/Footer.astro';
import Button from '../components/primitives/Button.astro';
---

<Layout title="Login | Ralph - AI-Native Private Equity Platform">
  <div class="min-h-screen bg-primary">
    <Header />
    <main>
      <!-- Login Section -->
      <section class="flex items-center justify-center min-h-screen pt-16 pb-8">
        <div class="w-full max-w-md px-6">
          <!-- Login Card -->
          <div class="bg-background border border-accent/20 rounded-lg overflow-hidden">
            <div class="border-l-4 border-accent bg-card/30 px-8 py-10">
              <!-- Logo and Title -->
              <div class="text-center mb-8">
                <div class="w-12 h-12 bg-accent rounded-lg flex items-center justify-center mx-auto mb-4">
                  <svg class="w-6 h-6 text-background font-bold" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                  </svg>
                </div>
                <h1 class="text-2xl font-bold text-primary mb-2">Welcome to Ralph</h1>
                <p class="text-secondary text-sm">Sign in to your PE intelligence platform</p>
              </div>

              <!-- Login Form -->
              <form id="loginForm" class="space-y-6">
                <!-- Username Field -->
                <div>
                  <label for="username" class="block text-sm font-medium text-primary mb-2">
                    Username or Email
                  </label>
                  <input
                    type="text"
                    id="username"
                    name="username"
                    required
                    class="w-full px-4 py-3 bg-background border border-neutral-600 rounded-md text-primary placeholder-muted focus:outline-none focus:ring-2 focus:ring-accent focus:border-transparent transition-colors"
                    placeholder="Enter your username or email"
                  />
                </div>

                <!-- Password Field -->
                <div>
                  <label for="password" class="block text-sm font-medium text-primary mb-2">
                    Password
                  </label>
                  <div class="relative">
                    <input
                      type="password"
                      id="password"
                      name="password"
                      required
                      class="w-full px-4 py-3 bg-background border border-neutral-600 rounded-md text-primary placeholder-muted focus:outline-none focus:ring-2 focus:ring-accent focus:border-transparent transition-colors pr-12"
                      placeholder="Enter your password"
                    />
                    <button
                      type="button"
                      id="togglePassword"
                      class="absolute right-3 top-1/2 transform -translate-y-1/2 text-muted hover:text-primary transition-colors"
                    >
                      <svg id="eyeIcon" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                      </svg>
                    </button>
                  </div>
                </div>

                <!-- Error Message -->
                <div id="errorMessage" class="hidden bg-red-900/20 border border-red-500/30 rounded-md p-3">
                  <div class="flex items-center">
                    <svg class="w-4 h-4 text-red-400 mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
                    </svg>
                    <span id="errorText" class="text-sm text-red-400"></span>
                  </div>
                </div>

                <!-- Remember Me and Forgot Password -->
                <div class="flex items-center justify-between">
                  <label class="flex items-center">
                    <input type="checkbox" id="rememberMe" class="w-4 h-4 text-accent bg-background border-neutral-600 rounded focus:ring-accent focus:ring-2">
                    <span class="ml-2 text-sm text-secondary">Remember me</span>
                  </label>
                  <a href="#" class="text-sm text-accent hover:text-accent/80 transition-colors">
                    Forgot password?
                  </a>
                </div>

                <!-- Submit Button -->
                <div>
                  <Button 
                    type="submit" 
                    variant="primary" 
                    size="lg" 
                    class="w-full relative"
                    id="loginButton"
                  >
                    <span id="loginButtonText">Sign In</span>
                    <div id="loginSpinner" class="hidden absolute inset-0 flex items-center justify-center">
                      <svg class="animate-spin w-5 h-5 text-background" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                      </svg>
                    </div>
                  </Button>
                </div>
              </form>

              <!-- Alternative Actions -->
              <div class="mt-8 pt-6 border-t border-neutral-600">
                <p class="text-center text-sm text-secondary mb-4">
                  Don't have an account?
                </p>
                <div class="space-y-3">
                  <Button variant="secondary" size="md" class="w-full" href="/ralph-web/#">
                    Request Demo Access
                  </Button>
                  <Button variant="tertiary" size="sm" class="w-full" href="/ralph-web/">
                    ← Back to Home
                  </Button>
                </div>
              </div>

              <!-- Security Notice -->
              <div class="mt-6 pt-4 border-t border-neutral-600/50">
                <div class="flex items-center text-xs text-muted">
                  <svg class="w-3 h-3 mr-2 text-accent" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"/>
                  </svg>
                  SOC2 Type II compliant • 256-bit encryption • Multi-factor authentication available
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </main>
    <Footer />
  </div>

  <!-- Client-side JavaScript -->
  <script>
    // Form elements
    const loginForm = document.getElementById('loginForm');
    const usernameInput = document.getElementById('username');
    const passwordInput = document.getElementById('password');
    const togglePasswordBtn = document.getElementById('togglePassword');
    const eyeIcon = document.getElementById('eyeIcon');
    const errorMessage = document.getElementById('errorMessage');
    const errorText = document.getElementById('errorText');
    const loginButton = document.getElementById('loginButton');
    const loginButtonText = document.getElementById('loginButtonText');
    const loginSpinner = document.getElementById('loginSpinner');

    // Password visibility toggle
    togglePasswordBtn?.addEventListener('click', () => {
      const isPassword = passwordInput.type === 'password';
      passwordInput.type = isPassword ? 'text' : 'password';
      
      // Update eye icon
      eyeIcon.innerHTML = isPassword ? 
        '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"/>' :
        '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>';
    });

    // Hide error message when user starts typing
    [usernameInput, passwordInput].forEach(input => {
      input?.addEventListener('input', () => {
        if (!errorMessage.classList.contains('hidden')) {
          errorMessage.classList.add('hidden');
        }
      });
    });

    // Form submission handler
    loginForm?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const username = usernameInput.value.trim();
      const password = passwordInput.value;

      // Basic client-side validation
      if (!username || !password) {
        showError('Please enter both username and password.');
        return;
      }

      // Show loading state
      setLoadingState(true);

      try {
        // Simulate authentication with delay (1.5-2.5 seconds)
        const delay = Math.random() * 1000 + 1500;
        await new Promise(resolve => setTimeout(resolve, delay));

        // Always return authentication error for demo purposes
        throw new Error('Invalid username or password. Please check your credentials and try again.');

      } catch (error) {
        showError(error.message);
      } finally {
        setLoadingState(false);
      }
    });

    // Show error message
    function showError(message) {
      errorText.textContent = message;
      errorMessage.classList.remove('hidden');
      
      // Shake animation for the form
      loginForm.style.animation = 'shake 0.5s';
      setTimeout(() => {
        loginForm.style.animation = '';
      }, 500);
    }

    // Loading state management
    function setLoadingState(loading) {
      loginButton.disabled = loading;
      
      if (loading) {
        loginButtonText.classList.add('invisible');
        loginSpinner.classList.remove('hidden');
        loginButton.classList.add('opacity-75', 'cursor-not-allowed');
      } else {
        loginButtonText.classList.remove('invisible');
        loginSpinner.classList.add('hidden');
        loginButton.classList.remove('opacity-75', 'cursor-not-allowed');
      }
    }

    // Add CSS for shake animation
    const style = document.createElement('style');
    style.textContent = `
      @keyframes shake {
        0%, 100% { transform: translateX(0); }
        10%, 30%, 50%, 70%, 90% { transform: translateX(-2px); }
        20%, 40%, 60%, 80% { transform: translateX(2px); }
      }
    `;
    document.head.appendChild(style);
  </script>
</Layout>