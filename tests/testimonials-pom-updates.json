{
  "selectors": {
    "testimonialsSection": {
      "section": "section:has(h2:has-text(\"Less Email, More Productivity\"))",
      "jaceSelector": "div.mx-auto.max-w-7xl",
      "title": "h2",
      "subtitle": "p:has-text(\"save hours every week\")",
      "testimonialCards": "figure",
      "testimonialQuote": "blockquote p",
      "testimonialAuthor": "figcaption div:first-child",
      "testimonialTitle": "figcaption div:last-child"
    }
  },
  "expectedStyles": {
    "testimonialsSection": {
      "backgroundColor": "rgba(0, 0, 0, 0)",
      "padding": "0px 32px"
    },
    "testimonialsTitle": {
      "fontSize": "16px",
      "fontWeight": "600",
      "color": "rgb(255, 220, 97)",
      "textAlign": "center"
    },
    "testimonialsSubtitle": {
      "fontSize": "48px",
      "color": "rgb(255, 255, 255)",
      "marginTop": "16px"
    },
    "testimonialCard": {
      "backgroundColor": "rgb(255, 255, 255)",
      "borderRadius": "16px",
      "boxShadow": "rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px, oklab(0.21 -0.00316127 -0.0338527 / 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.1) 0px 4px 6px -4px",
      "padding": "24px"
    },
    "testimonialQuote": {
      "fontSize": "14px",
      "lineHeight": "24px",
      "color": "oklch(0.21 0.034 264.665)"
    },
    "testimonialAuthor": {
      "fontWeight": "600",
      "color": "oklch(0.21 0.034 264.665)"
    }
  },
  "expectedContent": {
    "title": "Less Email, More Productivity",
    "subtitle": "Jace users save hours every week—read their stories",
    "testimonialCount": 9,
    "testimonials": [
      {
        "quote": "“Jace has entirely reshaped the way I approach email. It saves me over an hour a day - and the feature list keeps growing. It seamlessly integrates with my Google Workspace Gmail account. Additionally, I use Superwhisper to chat with the email agent, so I rarely have to touch my keyboard.”",
        "author": "Josh Graham",
        "title": "Founder @ instantvoiceover.ai"
      },
      {
        "quote": "“Been using Jace for 6mo now. Honestly saves me 1h+ every day. Give it a shot if you're struggling with emails like me!”",
        "author": "Jenny Xiao",
        "title": "Jenny Xiao@jennywxiao"
      },
      {
        "quote": "“Jace is the best AI for email I've used. I'm impressed by how good the generated replies are. It's just like myself. And I hardly ever need to edit them. I'm saving hours a week on email. Jace is so good that I even included it in my AI basics course to help beginners get started with AI.”",
        "author": "Darius Foroux",
        "title": "Darius Foroux@DariusForoux"
      },
      {
        "quote": "“Now we are talking. Thats something I really want. Amazing usecase for AI.”",
        "author": "Chubby",
        "title": "Chubby@kimmonismus"
      },
      {
        "quote": "“Impressive!”",
        "author": "Philippe Tremblay",
        "title": "Philippe Tremblay@philtrem22"
      },
      {
        "quote": "“testing the most beautiful new email ai agent i’ve seen yet”",
        "author": "swyx",
        "title": "swyx@swyx"
      },
      {
        "quote": "“wow, yes — Jace from @ZetaLabsAI is exactly what I've been looking in an email helper”",
        "author": "Andel Husbands",
        "title": "Andel Husbands@AndelHusbands"
      },
      {
        "quote": "“This @ZetaLabsAI Jace AI agent looks great-just what we desperately need!”",
        "author": "Derya Unutmaz",
        "title": "Derya Unutmaz@DeryaTR_"
      },
      {
        "quote": "“E-mail inboxes are precious but extremely cluttered knowledge bases (personal and professional). Jace is helping me streamline retrieving important information and knowledge, in a way that, without Jace, I'd still be hostage to searching dozens of emails, bad ui, mess, to find something. I thank you for drastically reducing my stress levels.”",
        "author": "João Neto",
        "title": "João NetoNeumatic"
      }
    ]
  },
  "validationMethod": "\n  async validateTestimonials() {\n    const errors = [];\n    \n    try {\n      // Check if testimonials section exists\n      const sectionExists = await this.page.evaluate(() => {\n        const h2 = Array.from(document.querySelectorAll('h2')).find(h2 => \n          h2.textContent.includes('Less Email, More Productivity')\n        );\n        return !!h2;\n      });\n      \n      if (!sectionExists) {\n        errors.push('Testimonials section not found');\n        return errors;\n      }\n      \n      // Validate title and subtitle\n      const titleText = await this.page.evaluate(() => {\n        const h2 = Array.from(document.querySelectorAll('h2')).find(h2 => \n          h2.textContent.includes('Less Email, More Productivity')\n        );\n        return h2 ? h2.textContent.trim() : null;\n      });\n      \n      if (titleText !== this.expectedContent.testimonialsTitle) {\n        errors.push(`Testimonials title mismatch: \"${titleText}\" !== \"${this.expectedContent.testimonialsTitle}\"`);\n      }\n      \n      // Validate subtitle\n      const subtitleText = await this.page.evaluate(() => {\n        const subtitle = Array.from(document.querySelectorAll('p')).find(p => \n          p.textContent.includes('save hours every week')\n        );\n        return subtitle ? subtitle.textContent.trim() : null;\n      });\n      \n      if (!subtitleText || !subtitleText.includes('save hours every week')) {\n        errors.push('Testimonials subtitle missing or incorrect');\n      }\n      \n      // Count testimonials\n      const testimonialCount = await this.page.evaluate(() => {\n        if (document.querySelector('figure')) {\n          // Jace structure\n          return document.querySelectorAll('figure').length;\n        } else {\n          // Ralph structure (card-based)\n          return document.querySelectorAll('.card-white').length;\n        }\n      });\n      \n      if (this.target === 'jace' && testimonialCount !== 9) {\n        errors.push(`Expected 9 testimonials, found ${testimonialCount}`);\n      }\n      \n    } catch (error) {\n      errors.push(`Testimonials validation error: ${error.message}`);\n    }\n    \n    return errors;\n  }"
}